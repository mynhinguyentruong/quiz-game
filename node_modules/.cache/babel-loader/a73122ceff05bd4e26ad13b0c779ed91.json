{"ast":null,"code":"var _jsxFileName = \"/Users/irenenguyen/quiz-game/src/Question.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  let newString = props.question; // each of the answer when clicked will trigger the function that \n  // update the selectedAnswer property\n  // if the id match, it will update the correct place\n\n  const displayAnswers = props.possible_answers.map(answer => /*#__PURE__*/_jsxDEV(\"h4\", {\n    style: {\n      backgroundColor: props.selectedAnswer === answer ? \"#D6DBF5\" : \"\"\n    },\n    className: \"answer\",\n    id: answer,\n    onClick: () => props.setSelectedAnswer(props.id, answer),\n    children: answer.replace(/&amp;/g, \"&\").replace(/&quot;/g, '\"').replace(/&#039;/g, \"'\")\n  }, answer, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: newString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-container\",\n      children: displayAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Question","props","newString","question","displayAnswers","possible_answers","map","answer","backgroundColor","selectedAnswer","setSelectedAnswer","id","replace"],"sources":["/Users/irenenguyen/quiz-game/src/Question.js"],"sourcesContent":["import React from 'react'\n\nexport default function Question(props) {\n    \n    \n    let newString = props.question\n    \n    // each of the answer when clicked will trigger the function that \n    // update the selectedAnswer property\n    // if the id match, it will update the correct place\n    \n    const displayAnswers = props.possible_answers.map(answer => (\n        \n            <h4\n                style={{backgroundColor: props.selectedAnswer === answer ? \"#D6DBF5\": \"\"}}\n                className=\"answer\"\n                key={answer} \n                id={answer} \n                onClick={()=>props.setSelectedAnswer(props.id, answer)}>\n                {answer.replace(/&amp;/g,\"&\").replace(/&quot;/g,'\"').replace(/&#039;/g, \"'\")}\n            </h4>\n            \n        \n    ))\n    \n   \n    \n    return (\n        <div>\n            <h3>{newString}</h3>\n            <div className=\"answer-container\">\n            {displayAnswers}\n            </div>\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAGpC,IAAIC,SAAS,GAAGD,KAAK,CAACE,QAAtB,CAHoC,CAKpC;EACA;EACA;;EAEA,MAAMC,cAAc,GAAGH,KAAK,CAACI,gBAAN,CAAuBC,GAAvB,CAA2BC,MAAM,iBAEhD;IACI,KAAK,EAAE;MAACC,eAAe,EAAEP,KAAK,CAACQ,cAAN,KAAyBF,MAAzB,GAAkC,SAAlC,GAA6C;IAA/D,CADX;IAEI,SAAS,EAAC,QAFd;IAII,EAAE,EAAEA,MAJR;IAKI,OAAO,EAAE,MAAIN,KAAK,CAACS,iBAAN,CAAwBT,KAAK,CAACU,EAA9B,EAAkCJ,MAAlC,CALjB;IAAA,UAMKA,MAAM,CAACK,OAAP,CAAe,QAAf,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,SAArC,EAA+C,GAA/C,EAAoDA,OAApD,CAA4D,SAA5D,EAAuE,GAAvE;EANL,GAGSL,MAHT;IAAA;IAAA;IAAA;EAAA,QAFe,CAAvB;EAgBA,oBACI;IAAA,wBACI;MAAA,UAAKL;IAAL;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,kBAAf;MAAA,UACCE;IADD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;KAjCuBJ,Q"},"metadata":{},"sourceType":"module"}