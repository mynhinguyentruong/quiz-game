{"ast":null,"code":"var _jsxFileName = \"/Users/irenenguyen/quiz-game/quiz-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Question from './Question'; //https://opentdb.com/api.php?amount=5&difficulty=hard&type=multiple\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [questionsData, setQuestionsData] = useState([]);\n  const [endGame, setEndGame] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  React.useEffect(() => {\n    if (endGame) {\n      let number = questionsData.reduce((prevValue, currValue) => {\n        return currValue.correct_answer === currValue.selectedAnswer ? prevValue + 1 : prevValue;\n      }, 0); //check correct_answer \n\n      setCorrectAnswers(number);\n    }\n  }); //update questionsData at the selectedAnswer property when one of the answer is clicked\n\n  function setSelectedAnswer(id, answer) {\n    // console.log(id)\n    setQuestionsData(prevQuestions => prevQuestions.map(question => {\n      return question.question === id ? { ...question,\n        selectedAnswer: answer\n      } : question;\n    }));\n  }\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n  function getQuestions() {\n    fetch(\"https://opentdb.com/api.php?amount=10&difficulty=hard&type=multiple\").then(res => res.json()).then(data => {\n      //re-written object structure cameback from api\n      setQuestionsData(data.results.map(result => {\n        return {\n          question: result.question.replace(/&amp;/g, \"&\").replace(/&quot;/g, '\"').replace(/&#039;/g, \"'\"),\n          possible_answers: shuffleArray([...result.incorrect_answers, result.correct_answer]),\n          correct_answer: result.correct_answer,\n          selectedAnswer: \"\"\n        };\n      }));\n    });\n  } //now that i have the data\n\n\n  const displayQuestions = questionsData.map(question => /*#__PURE__*/_jsxDEV(Question, {\n    question: question.question,\n    id: question.question,\n    possible_answers: question.possible_answers,\n    setSelectedAnswer: setSelectedAnswer,\n    selectedAnswer: question.selectedAnswer\n  }, question.question, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this));\n  return questionsData.length === 0 ? /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"load-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quizzical\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click \\\"Start Quiz\\\" to get random questions!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getQuestions,\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main-screen\",\n    children: [displayQuestions, !endGame ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEndGame(true),\n      children: \"Check answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"You scored \", correctAnswers, \"/10 correct answers\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEndGame(false);\n          getQuestions();\n        },\n        children: \"Play again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n} // [{category: \"Sports\", type: \"multiple\", difficulty: \"hard\", question: \"With which doubles partner did John McEnroe have most success?\", correct_answer: \"Peter Fleming\", incorrect_answers: [\"Mark Woodforde\", \"Michael Stich\", \"Mary Carillo\"]}, {category: \"Celebrities\", type: \"multiple\", difficulty: \"hard\", question: \"How tall is Tom Cruise?\", correct_answer: \"5&prime; 7&Prime;\", incorrect_answers: [\"5&prime; 9&Prime;\", \"5&prime; 4&Prime;\", \"5&prime; 5&Prime;\"]}, {category: \"Entertainment: Board Games\", type: \"multiple\", difficulty: \"hard\", question: \"Which board game was first released on February 6th, 1935?\", correct_answer: \"Monopoly\", incorrect_answers: [\"Risk\", \"Clue\", \"Candy Land\"]}, {category: \"History\", type: \"multiple\", difficulty: \"hard\", question: \"Which of the following was not one of Joseph Stalin&#039;s ten blows during World War II?\", correct_answer: \"Vistula-Oder Offensive\", incorrect_answers: [\"Crimean Offensive\", \"Leningrad-Novgorod Offensive\", \"Operation Bagration\"]}, {category: \"Entertainment: Video Games\", type: \"multiple\", difficulty: \"hard\", question: \"What is the name of the main island in PLAYERUNKNOWN&#039;S BATTLEGROUNDS?\", correct_answer: \"Erangel\", incorrect_answers: [\"Marmara\", \"Severny\", \"Lastovo\"]\n\n_s(App, \"GDWSXimL0tlUYjCCg66h7oodG7U=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Question","App","questionsData","setQuestionsData","endGame","setEndGame","correctAnswers","setCorrectAnswers","useEffect","number","reduce","prevValue","currValue","correct_answer","selectedAnswer","setSelectedAnswer","id","answer","prevQuestions","map","question","shuffleArray","array","i","length","j","Math","floor","random","temp","getQuestions","fetch","then","res","json","data","results","result","replace","possible_answers","incorrect_answers","displayQuestions"],"sources":["/Users/irenenguyen/quiz-game/quiz-game/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\nimport Question from './Question'\n\n//https://opentdb.com/api.php?amount=5&difficulty=hard&type=multiple\n\nexport default function App() {\n    \n    const [questionsData, setQuestionsData] = useState([])\n    const [endGame, setEndGame] = useState(false)\n    const [correctAnswers, setCorrectAnswers] = useState(0)\n    \n    \n    React.useEffect(() => {\n        if(endGame) {\n            let number = questionsData.reduce((prevValue,currValue) => { \n                return currValue.correct_answer===currValue.selectedAnswer ? prevValue + 1 : prevValue\n                } , 0)\n            //check correct_answer \n            setCorrectAnswers(number)\n        }\n        \n    })\n    \n    //update questionsData at the selectedAnswer property when one of the answer is clicked\n    function setSelectedAnswer(id, answer) {\n        // console.log(id)\n        setQuestionsData(prevQuestions => prevQuestions.map(question => {\n            return question.question === id ? {...question, selectedAnswer: answer} : question\n        }))\n    }\n    \n    function shuffleArray(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    }\n    \n    function getQuestions() {\n        fetch(\"https://opentdb.com/api.php?amount=10&difficulty=hard&type=multiple\")\n        .then(res => res.json())\n        .then(data => {\n            //re-written object structure cameback from api\n            setQuestionsData(data.results.map(result => {\n                return {\n                    question: result.question.replace(/&amp;/g,\"&\").replace(/&quot;/g,'\"').replace(/&#039;/g, \"'\"), \n                    possible_answers: shuffleArray([...result.incorrect_answers,result.correct_answer]), \n                    correct_answer: result.correct_answer,\n                    selectedAnswer: \"\"\n                    }\n                    \n            }))\n        })\n    }\n    //now that i have the data\n    const displayQuestions = questionsData.map((question)=> (\n        \n        <Question \n            question={question.question} \n            key={question.question} \n            id={question.question}\n            possible_answers={question.possible_answers} \n            setSelectedAnswer={setSelectedAnswer}\n            selectedAnswer={question.selectedAnswer}\n            />\n        \n        ) )\n    \n    return (\n        questionsData.length === 0 ?\n        <main className=\"load-screen\">\n            <h1>Quizzical</h1>\n            <p>Click \"Start Quiz\" to get random questions!</p>\n            <button onClick={getQuestions}>Start Quiz</button>\n        </main> \n        :\n        <main className=\"main-screen\">\n            {displayQuestions}\n            {!endGame ? \n            <button onClick={()=>setEndGame(true)}>Check answers</button> :\n            <footer>\n                You scored {correctAnswers}/10 correct answers\n                <button onClick={()=>{setEndGame(false);getQuestions()}}>Play again</button>\n            </footer>\n            }\n        </main>\n    )\n}\n\n// [{category: \"Sports\", type: \"multiple\", difficulty: \"hard\", question: \"With which doubles partner did John McEnroe have most success?\", correct_answer: \"Peter Fleming\", incorrect_answers: [\"Mark Woodforde\", \"Michael Stich\", \"Mary Carillo\"]}, {category: \"Celebrities\", type: \"multiple\", difficulty: \"hard\", question: \"How tall is Tom Cruise?\", correct_answer: \"5&prime; 7&Prime;\", incorrect_answers: [\"5&prime; 9&Prime;\", \"5&prime; 4&Prime;\", \"5&prime; 5&Prime;\"]}, {category: \"Entertainment: Board Games\", type: \"multiple\", difficulty: \"hard\", question: \"Which board game was first released on February 6th, 1935?\", correct_answer: \"Monopoly\", incorrect_answers: [\"Risk\", \"Clue\", \"Candy Land\"]}, {category: \"History\", type: \"multiple\", difficulty: \"hard\", question: \"Which of the following was not one of Joseph Stalin&#039;s ten blows during World War II?\", correct_answer: \"Vistula-Oder Offensive\", incorrect_answers: [\"Crimean Offensive\", \"Leningrad-Novgorod Offensive\", \"Operation Bagration\"]}, {category: \"Entertainment: Video Games\", type: \"multiple\", difficulty: \"hard\", question: \"What is the name of the main island in PLAYERUNKNOWN&#039;S BATTLEGROUNDS?\", correct_answer: \"Erangel\", incorrect_answers: [\"Marmara\", \"Severny\", \"Lastovo\"]\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}